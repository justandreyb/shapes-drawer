import java.util.regex.Matcher

plugins {
    id 'application'
}

ext {
    moduleName = 'drawer.application'
    javaFxVersion = '11.0.2'
}

dependencies {
    implementation project(":ui")

    implementation "org.openjfx:javafx-base:${javaFxVersion}:${platform}"
    implementation "org.openjfx:javafx-graphics:${javaFxVersion}:${platform}"
    implementation "org.openjfx:javafx-controls:${javaFxVersion}:${platform}"
}

mainClassName = "$moduleName/by.bsuir.drawer.application.DrawerApplication"

run {
    inputs.property("moduleName", moduleName)
    doFirst {
        jvmArgs = [
                '--module-path', classpath.asPath,
                '--module', mainClassName,
                '--patch-module', "$moduleName=" + files(sourceSets.main.resources).asPath,
        ]
        classpath = files()
    }
}

startScripts {
    inputs.property("moduleName", moduleName)
    doFirst {
        classpath = files()
        defaultJvmOpts = [
                '--module-path', 'APP_HOME_LIBS',
                '--module', mainClassName
        ]
    }
    doLast{
        def bashFile = new File(outputDir, applicationName)
        String bashContent = bashFile.text
        bashFile.text = bashContent.replaceFirst('APP_HOME_LIBS', Matcher.quoteReplacement('$APP_HOME/lib'))

        def batFile = new File(outputDir, applicationName + ".bat")
        String batContent = batFile.text
        batFile.text = batContent.replaceFirst('APP_HOME_LIBS', Matcher.quoteReplacement('%APP_HOME%\\lib'))
    }
}

afterEvaluate {
    compileJava {
        doLast {
            options.compilerArgs = [
                    '--module-path', classpath.asPath
            ]
            classpath = files()
        }
    }
}
